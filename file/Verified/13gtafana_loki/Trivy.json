{
  "SchemaVersion": 2,
  "ArtifactName": "0a7fd5b2c85c",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.16.2"
    },
    "ImageID": "sha256:0a7fd5b2c85c883937e43fc4de280a590e7c9e3017041049359f7cec365f5453",
    "DiffIDs": [
      "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
      "sha256:5a53c7c6ae37b596bf860345015ac125941c201866dc976410fb60e10661cd72",
      "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8",
      "sha256:48c732cde8bcdaf8f3aad63024db35abbab6d54f2432f5358e671cbd11a9eb9a",
      "sha256:ac3cd139acecf3b859e0c262ca03d4d2da4800929be07f926ebd29f8ac6f18c3",
      "sha256:349d5393e434f8867f21018ea27c741eb10c9890013b329f1ffa6a3086e612a4",
      "sha256:8a07b4abdfbdeb08ae83004c8a287ac45819743ba7314e23ff6bbc7178352174"
    ],
    "RepoTags": [
      "grafana/loki:latest"
    ],
    "RepoDigests": [
      "grafana/loki@sha256:0c86eba2dee75220d99b604503a91bc07532d238454fcfd712ec60d9d8a43c5d"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "container": "c9833153117b0dd4434b81f1ef3314f0b714004566362112827d963744353cbd",
      "created": "2023-02-01T10:42:45.569144158Z",
      "docker_version": "20.10.14",
      "history": [
        {
          "created": "2022-08-09T17:19:53Z",
          "created_by": "/bin/sh -c #(nop) ADD file:2a949686d9886ac7c10582a6c29116fd29d3077d02755e87e111870d63607725 in / "
        },
        {
          "created": "2022-08-09T17:19:53Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:42Z",
          "created_by": "/bin/sh -c apk add --no-cache ca-certificates libcap"
        },
        {
          "created": "2023-02-01T10:42:43Z",
          "created_by": "/bin/sh -c #(nop) COPY file:3c1ce866d8ab1d3461ef50aaee4afdb69c74e78e99cafdeeec978528ff45c96e in /usr/bin/loki "
        },
        {
          "created": "2023-02-01T10:42:43Z",
          "created_by": "/bin/sh -c #(nop) COPY file:ed079c0716411ccb1f53714fcfb4b1b99f1c60806937b5264348720a1ae6f957 in /etc/loki/local-config.yaml "
        },
        {
          "created": "2023-02-01T10:42:43Z",
          "created_by": "/bin/sh -c addgroup -g 10001 -S loki \u0026\u0026     adduser -u 10001 -S loki -G loki"
        },
        {
          "created": "2023-02-01T10:42:44Z",
          "created_by": "/bin/sh -c mkdir -p /loki/rules \u0026\u0026     mkdir -p /loki/rules-temp \u0026\u0026     chown -R loki:loki /etc/loki /loki"
        },
        {
          "created": "2023-02-01T10:42:44Z",
          "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] \u0026\u0026 echo 'hosts: files dns' \u003e /etc/nsswitch.conf"
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  USER 10001",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  EXPOSE 3100",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/bin/loki\"]",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  CMD [\"-config.file=/etc/loki/local-config.yaml\"]",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.created=2023-02-01T10:41:32Z",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.revision=a880ea3bf4569ea5fe25b7e687bf0703f49c01c3",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.source=https://github.com/grafana/loki.git",
          "empty_layer": true
        },
        {
          "created": "2023-02-01T10:42:45Z",
          "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.url=https://github.com/grafana/loki",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7",
          "sha256:5a53c7c6ae37b596bf860345015ac125941c201866dc976410fb60e10661cd72",
          "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8",
          "sha256:48c732cde8bcdaf8f3aad63024db35abbab6d54f2432f5358e671cbd11a9eb9a",
          "sha256:ac3cd139acecf3b859e0c262ca03d4d2da4800929be07f926ebd29f8ac6f18c3",
          "sha256:349d5393e434f8867f21018ea27c741eb10c9890013b329f1ffa6a3086e612a4",
          "sha256:8a07b4abdfbdeb08ae83004c8a287ac45819743ba7314e23ff6bbc7178352174"
        ]
      },
      "config": {
        "Cmd": [
          "-config.file=/etc/loki/local-config.yaml"
        ],
        "Entrypoint": [
          "/usr/bin/loki"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "Image": "sha256:e22cbc67d7b470eb7e320fbe9bc414421b56fc4881b6bb0d46908a1cc6599f45",
        "Labels": {
          "org.opencontainers.image.created": "2023-02-01T10:41:32Z",
          "org.opencontainers.image.revision": "a880ea3bf4569ea5fe25b7e687bf0703f49c01c3",
          "org.opencontainers.image.source": "https://github.com/grafana/loki.git",
          "org.opencontainers.image.url": "https://github.com/grafana/loki"
        },
        "User": "10001"
      }
    }
  },
  "Results": [
    {
      "Target": "0a7fd5b2c85c (alpine 3.16.2)",
      "Class": "os-pkgs",
      "Type": "alpine",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2022-4450",
          "PkgID": "libcrypto1.1@1.1.1q-r0",
          "PkgName": "libcrypto1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4450",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses  ...",
          "Description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-415"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4450",
            "https://github.com/advisories/GHSA-v5w6-wcm8-jm4q",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
            "https://rustsec.org/advisories/RUSTSEC-2023-0010.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-18T21:48:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0215",
          "PkgID": "libcrypto1.1@1.1.1q-r0",
          "PkgName": "libcrypto1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0215",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The public API function BIO_new_NDEF is a helper function used for str ...",
          "Description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7. Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream. The OpenSSL cms and smime command line applications are similarly affected.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-416"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0215",
            "https://github.com/advisories/GHSA-r7jw-wp68-3xch",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0215",
            "https://rustsec.org/advisories/RUSTSEC-2023-0009.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-18T21:48:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0286",
          "PkgID": "libcrypto1.1@1.1.1q-r0",
          "PkgName": "libcrypto1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0286",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "There is a type confusion vulnerability relating to X.400 address proc ...",
          "Description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-843"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "V3Score": 9.1
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "V3Score": 7.4
            }
          },
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0286",
            "https://github.com/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://github.com/pyca/cryptography/security/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0286",
            "https://rustsec.org/advisories/RUSTSEC-2023-0006.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-21T19:40:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4304",
          "PkgID": "libcrypto1.1@1.1.1q-r0",
          "PkgName": "libcrypto1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4304",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "A timing based side channel exists in the OpenSSL RSA Decryption imple ...",
          "Description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4304",
            "https://github.com/advisories/GHSA-p52g-cm5j-mjv4",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4304",
            "https://rustsec.org/advisories/RUSTSEC-2023-0007.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4450",
          "PkgID": "libssl1.1@1.1.1q-r0",
          "PkgName": "libssl1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4450",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses  ...",
          "Description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-415"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4450",
            "https://github.com/advisories/GHSA-v5w6-wcm8-jm4q",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
            "https://rustsec.org/advisories/RUSTSEC-2023-0010.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-18T21:48:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0215",
          "PkgID": "libssl1.1@1.1.1q-r0",
          "PkgName": "libssl1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0215",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "The public API function BIO_new_NDEF is a helper function used for str ...",
          "Description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7. Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream. The OpenSSL cms and smime command line applications are similarly affected.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-416"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0215",
            "https://github.com/advisories/GHSA-r7jw-wp68-3xch",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0215",
            "https://rustsec.org/advisories/RUSTSEC-2023-0009.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-18T21:48:00Z"
        },
        {
          "VulnerabilityID": "CVE-2023-0286",
          "PkgID": "libssl1.1@1.1.1q-r0",
          "PkgName": "libssl1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-0286",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "There is a type confusion vulnerability relating to X.400 address proc ...",
          "Description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-843"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "V3Score": 9.1
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H",
              "V3Score": 7.4
            }
          },
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0286",
            "https://github.com/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://github.com/pyca/cryptography/security/advisories/GHSA-x4qr-2fvf-3mr5",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-0286",
            "https://rustsec.org/advisories/RUSTSEC-2023-0006.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://ubuntu.com/security/notices/USN-5845-1",
            "https://ubuntu.com/security/notices/USN-5845-2",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-21T19:40:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-4304",
          "PkgID": "libssl1.1@1.1.1q-r0",
          "PkgName": "libssl1.1",
          "InstalledVersion": "1.1.1q-r0",
          "FixedVersion": "1.1.1t-r0",
          "Layer": {
            "DiffID": "sha256:994393dc58e7931862558d06e46aa2bb17487044f670f310dffe1d24e4d1eec7"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-4304",
          "DataSource": {
            "ID": "alpine",
            "Name": "Alpine Secdb",
            "URL": "https://secdb.alpinelinux.org/"
          },
          "Title": "A timing based side channel exists in the OpenSSL RSA Decryption imple ...",
          "Description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "Severity": "MEDIUM",
          "References": [
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-4304",
            "https://github.com/advisories/GHSA-p52g-cm5j-mjv4",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-4304",
            "https://rustsec.org/advisories/RUSTSEC-2023-0007.html",
            "https://ubuntu.com/security/notices/USN-5844-1",
            "https://www.openssl.org/news/secadv/20230207.txt"
          ],
          "PublishedDate": "2023-02-08T20:15:00Z",
          "LastModifiedDate": "2023-02-09T14:26:00Z"
        }
      ]
    },
    {
      "Target": "usr/bin/loki",
      "Class": "lang-pkgs",
      "Type": "gobinary",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2020-8911",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.44.102",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8911",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws/aws-sdk-go: CBC padding oracle issue in AWS S3 Crypto SDK for golang",
          "Description": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 5.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:C/C:H/I:N/A:N",
              "V3Score": 5.6
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8911",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869800",
            "https://github.com/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8911",
            "https://pkg.go.dev/vuln/GO-2022-0646"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-18T13:37:00Z"
        },
        {
          "VulnerabilityID": "CVE-2020-8912",
          "PkgName": "github.com/aws/aws-sdk-go",
          "InstalledVersion": "v1.44.102",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2020-8912",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "aws-sdk-go: In-band key negotiation issue in AWS S3 Crypto SDK for golang",
          "Description": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
          "Severity": "LOW",
          "CweIDs": [
            "CWE-327"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            },
            "nvd": {
              "V2Vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V2Score": 2.1,
              "V3Score": 2.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N",
              "V3Score": 2.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2020-8912",
            "https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09",
            "https://bugzilla.redhat.com/show_bug.cgi?id=1869801",
            "https://github.com/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e",
            "https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4",
            "https://github.com/aws/aws-sdk-go/pull/3403",
            "https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw",
            "https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc",
            "https://nvd.nist.gov/vuln/detail/CVE-2020-8912",
            "https://pkg.go.dev/vuln/GO-2022-0646"
          ],
          "PublishedDate": "2020-08-11T20:15:00Z",
          "LastModifiedDate": "2020-08-17T19:31:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-46146",
          "PkgName": "github.com/prometheus/exporter-toolkit",
          "InstalledVersion": "v0.7.2-0.20220901134540-2434b08435da",
          "FixedVersion": "0.7.2, 0.8.2",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-46146",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "exporter-toolkit: authentication bypass via cache poisoning",
          "Description": "Prometheus Exporter Toolkit is a utility package to build exporters. Prior to versions 0.7.2 and 0.8.2, if someone has access to a Prometheus web.yml file and users' bcrypted passwords, they can bypass security by poisoning the built-in authentication cache. Versions 0.7.2 and 0.8.2 contain a fix for the issue. There is no workaround, but attacker must have access to the hashed password to use this functionality.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-287",
            "CWE-303"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
              "V3Score": 6.2
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 8.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
              "V3Score": 8.8
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2022/11/29/1",
            "http://www.openwall.com/lists/oss-security/2022/11/29/2",
            "http://www.openwall.com/lists/oss-security/2022/11/29/4",
            "https://access.redhat.com/security/cve/CVE-2022-46146",
            "https://github.com/advisories/GHSA-7rg2-cxvp-9p7p",
            "https://github.com/prometheus/exporter-toolkit/commit/5b1eab34484ddd353986bce736cd119d863e4ff5",
            "https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-46146",
            "https://pkg.go.dev/vuln/GO-2022-1130"
          ],
          "PublishedDate": "2022-11-29T14:15:00Z",
          "LastModifiedDate": "2023-02-01T15:39:00Z"
        },
        {
          "VulnerabilityID": "CVE-2019-3826",
          "PkgName": "github.com/prometheus/prometheus",
          "InstalledVersion": "v0.39.1",
          "FixedVersion": "v2.7.1",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2019-3826",
          "DataSource": {
            "ID": "glad",
            "Name": "GitLab Advisory Database Community",
            "URL": "https://gitlab.com/gitlab-org/advisories-community"
          },
          "Title": "prometheus: Stored DOM cross-site scripting (XSS) attack via crafted URL",
          "Description": "A stored, DOM based, cross-site scripting (XSS) flaw was found in Prometheus before version 2.7.1. An attacker could exploit this by convincing an authenticated user to visit a crafted URL on a Prometheus server, allowing for the execution and persistent storage of arbitrary scripts.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-79"
          ],
          "CVSS": {
            "nvd": {
              "V2Vector": "AV:N/AC:M/Au:N/C:N/I:P/A:N",
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V2Score": 4.3,
              "V3Score": 6.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
              "V3Score": 6.1
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHBA-2019:0327",
            "https://access.redhat.com/security/cve/CVE-2019-3826",
            "https://advisory.checkmarx.net/advisory/CX-2019-4297",
            "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3826",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-3826",
            "https://github.com/prometheus/prometheus/commit/62e591f9",
            "https://github.com/prometheus/prometheus/pull/5163",
            "https://lists.apache.org/thread.html/r48d5019bd42e0770f7e5351e420a63a41ff1f16924942442c6aff6a8@%3Ccommits.zookeeper.apache.org%3E",
            "https://lists.apache.org/thread.html/r8e3f7da12bf5750b0a02e69a78a61073a2ac950eed7451ce70a65177@%3Ccommits.zookeeper.apache.org%3E",
            "https://lists.apache.org/thread.html/rdf2a0d94c3b5b523aeff7741ae71347415276062811b687f30ea6573@%3Ccommits.zookeeper.apache.org%3E",
            "https://nvd.nist.gov/vuln/detail/CVE-2019-3826"
          ],
          "PublishedDate": "2019-03-26T18:29:00Z",
          "LastModifiedDate": "2021-03-31T21:15:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-41721",
          "PkgName": "golang.org/x/net",
          "InstalledVersion": "v0.0.0-20220920203100-d0c6ba3f52d9",
          "FixedVersion": "0.1.1-0.20221104162952-702349b0e862",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-41721",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "A request smuggling attack is possible when using MaxBytesHandler. Whe ...",
          "Description": "A request smuggling attack is possible when using MaxBytesHandler. When using MaxBytesHandler, the body of an HTTP request is not fully consumed. When the server attempts to read HTTP2 frames from the connection, it will instead be reading the body of the HTTP request, which could be attacker-manipulated to represent arbitrary HTTP2 requests.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-444"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://github.com/advisories/GHSA-fxg5-wq6x-vr4w",
            "https://go.dev/cl/447396",
            "https://go.dev/issue/56352",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-41721",
            "https://pkg.go.dev/vuln/GO-2023-1495"
          ],
          "PublishedDate": "2023-01-13T23:15:00Z",
          "LastModifiedDate": "2023-01-24T17:25:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-41717",
          "PkgName": "golang.org/x/net",
          "InstalledVersion": "v0.0.0-20220920203100-d0c6ba3f52d9",
          "FixedVersion": "0.4.0",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-41717",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "golang: net/http: An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests",
          "Description": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-770"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-41717",
            "https://github.com/advisories/GHSA-xrjj-mj9h-534m",
            "https://go.dev/cl/455635",
            "https://go.dev/cl/455717",
            "https://go.dev/issue/56350",
            "https://groups.google.com/g/golang-announce/c/L_3rmdT0BMU/m/yZDrXjIiBQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-41717",
            "https://pkg.go.dev/vuln/GO-2022-1144"
          ],
          "PublishedDate": "2022-12-08T20:15:00Z",
          "LastModifiedDate": "2022-12-12T17:50:00Z"
        },
        {
          "VulnerabilityID": "CVE-2022-41723",
          "PkgName": "golang.org/x/net",
          "InstalledVersion": "v0.0.0-20220920203100-d0c6ba3f52d9",
          "FixedVersion": "0.7.0",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-41723",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "[http2/hpack: avoid quadratic complexity in hpack decoding]",
          "Description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
          "Severity": "LOW",
          "References": [
            "https://github.com/advisories/GHSA-vvpx-j8f3-3w6h",
            "https://go.dev/cl/468135",
            "https://go.dev/cl/468295",
            "https://go.dev/issue/57855",
            "https://groups.google.com/g/golang-announce/c/V0aBFqaFs_E",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-41723",
            "https://pkg.go.dev/vuln/GO-2023-1571",
            "https://vuln.go.dev/ID/GO-2023-1571.json"
          ]
        },
        {
          "VulnerabilityID": "CVE-2022-32149",
          "PkgName": "golang.org/x/text",
          "InstalledVersion": "v0.3.7",
          "FixedVersion": "0.3.8",
          "Layer": {
            "DiffID": "sha256:8230caa3eec2dc24e104956618fd6021feb2feeb5f070dd6d7dae4a8d93567d8"
          },
          "SeveritySource": "nvd",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2022-32149",
          "DataSource": {
            "ID": "go-vulndb",
            "Name": "The Go Vulnerability Database",
            "URL": "https://github.com/golang/vulndb"
          },
          "Title": "golang: golang.org/x/text/language: ParseAcceptLanguage takes a long time to parse complex tags",
          "Description": "An attacker may cause a denial of service by crafting an Accept-Language header which ParseAcceptLanguage will take significant time to parse.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-772"
          ],
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2022-32149",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32149",
            "https://github.com/advisories/GHSA-69ch-w2m2-3vjp",
            "https://github.com/golang/go/issues/56152",
            "https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c",
            "https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c (v0.3.8)",
            "https://go.dev/cl/442235",
            "https://go.dev/issue/56152",
            "https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ",
            "https://groups.google.com/g/golang-dev/c/qfPIly0X7aU",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-32149",
            "https://pkg.go.dev/vuln/GO-2022-1059",
            "https://ubuntu.com/security/notices/USN-5873-1"
          ],
          "PublishedDate": "2022-10-14T15:15:00Z",
          "LastModifiedDate": "2022-10-18T17:41:00Z"
        }
      ]
    }
  ]
}
